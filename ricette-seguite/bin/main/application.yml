# application.yml 
--- 
spring: 
  application: 
    name: ricette-seguite
  cloud:
    consul:
      host: consul
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 60s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false
  kafka:
     bootstrap-servers: kafka:29092
     consumer:
        group-id: ricette,connessioni
        auto-offset-reset: latest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        properties:
           spring:
              json:
                 trusted:
                    packages: '*'
  jpa:
     hibernate:
        ddl-auto: create
  datasource:
     url: jdbc:mysql://ricetteseguitedb:3306/db
     username: user
     password: password
server: 
  port: 8083
#  port: 8080
