# application.yml
--- 
spring: 
  application: 
    name: connessioni
  cloud:
    consul:
      host: consul
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 60s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false 
  kafka:
     bootstrap-servers: kafka:9092
     producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer  
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        properties:
           spring:
              json:
                 trusted:
                    packages: '*'
  jpa:
     hibernate:
        ddl-auto: create
  datasource:
     url: jdbc:mysql://connessionidb:3306/db
     username: user
     password: password
server: 
  port: 8081
#  port: 8080

# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql: true
# disable OSIV
spring.jpa.open-in-view: false
